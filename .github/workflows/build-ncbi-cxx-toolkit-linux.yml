name: build-ncbi-cxx-toolkit-linux

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  build-srpm:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux_2_28_x86_64

    steps:
      - uses: actions/checkout@v5

      - name: Install rpm build tools
        run: dnf -y install rpm-build rpm-devel rpmdevtools

      - name: Build rpm buildtree
        working-directory: /github/home
        run: rpmdev-setuptree

      - name: Copy spec and patch files
        run: |
          cp ncbi-cxx-toolkit/rpm/*.spec /github/home/rpmbuild/SPECS
          cp ncbi-cxx-toolkit/rpm/*.patch /github/home/rpmbuild/SOURCES

      - name: Download source
        run: spectool -g -R /github/home/rpmbuild/SPECS/ncbi-cxx-toolkit.spec

      - name: Build SRPM
        run: rpmbuild -bs /github/home/rpmbuild/SPECS/ncbi-cxx-toolkit.spec

      # - id: name_srpm
      #   working-directory: /github/home/rpmbuild/SRPMS        
      #   run: echo "srpm_name="ncbi-cxx-toolkit*.src.rpm >> "$GITHUB_OUTPUT"

      - name: Upload SRPM
        uses: actions/upload-artifact@v4
        with:
          name: srpm
          path: /github/home/rpmbuild/SRPMS/ncbi-cxx-toolkit*.src.rpm
          if-no-files-found: error
          retention-days: 1
          overwrite: true

      
  build-native:
    name: Build on native ${{matrix.architecture}} Linux platform
    needs: [build-srpm]
    strategy:
      matrix:
        architecture: [x86_64, aarch64]
        include:
          - architecture: x86_64
            runner: ubuntu-latest
            container: quay.io/pypa/manylinux_2_28_x86_64
          - architecture: aarch64
            runner: ubuntu-24.04-arm
            container: quay.io/pypa/manylinux_2_28_aarch64
    runs-on: ${{matrix.runner}}
    container: ${{matrix.container}}
    steps:
      - name: Install rpm build tools
        run: dnf -y install rpm-build rpm-devel rpmdevtools

      - name: Build rpm buildtree
        working-directory: /github/home
        run: rpmdev-setuptree        

      - name: Download SRPM
        uses: actions/download-artifact@v5
        with:
          name: srpm

      - name: Copy SRPM to build tree
        run: cp ncbi-cxx-toolkit*.src.rpm /github/home/rpmbuild/SRPMS/

      - name: Install build dependencies
        run: dnf builddep -y /github/home/rpmbuild/SRPMS/ncbi-cxx-toolkit*.src.rpm

      - name: Build binary RPMs
        run: rpmbuild --rebuild /github/home/rpmbuild/SRPMS/ncbi-cxx-toolkit*.src.rpm

      - name: Upload RPMs
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.architecture}}
          path: /github/home/rpmbuild/RPMS/
          if-no-files-found: error
          retention-days: 1
          overwrite: true

  build-emulated:
    name: Build on emulated ${{matrix.architecture}} Linux platform
    needs: [build-srpm]
    strategy:
      matrix:
        architecture: [ppc64le, s390x, i386]
        include:
          - architecture: ppc64le
            binfmt_arch: ppc64le
            container: quay.io/pypa/manylinux_2_28_ppc64le
          - architecutre: s390x
            binfmt_arch: s390x
            container: quay.io/pypa/manylinux_2_28_s390x
          - architecutre: i386
            binfmt_arch: 386
            container: quay.io/pypa/manylinux_2_28_i686
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{matrix.binfmt_arch}}

      - name: Make output directory
        run: mkdir "emulated-out"

      - name: Start docker container
        run: |
          echo container_id="$(docker run -di -v "$PWD/emulated-out:/root" ${{matrix.container}})" >> "$GITHUB_ENV"

      - name: Install rpm build tools
        run: >
          docker exec ${{env.container_id}} dnf -y install rpm-build rpm-devel
          rpmdevtools

      - name: Build rpm buildtree
        run: docker exec -w /root ${{env.container_id}} rpmdev-setuptree        

      - name: Download SRPM
        uses: actions/download-artifact@v5
        with:
          name: srpm

      - name: Move SRPM to container
        run: mv ncbi-cxx-toolkit*.src.rpm emulated-out/
        
      - name: Move SRPM to rpm buildtree
        run: >-
          docker exec -w /root ${{env.container_id}} sh -c
          'mv ncbi-cxx-toolkit*.src.rpm rpmbuild/SRPMS/'
          
      - name: Install build dependencies
        run: >
          docker exec ${{env.container_id}} sh -c
          'dnf builddep -y  /root/rpmbuild/SRPMS/ncbi-cxx-toolkit*.src.rpm'

      - name: Build binary RPMs
        run: >
          docker exec ${{env.container_id}} sh -c
          'rpmbuild --rebuild /root/rpmbuild/SRPMS/ncbi-cxx-toolkit*.src.rpm'

      - name: Upload RPMs
        uses: actions/upload-artifact@v4
        with:
          name: ${{matrix.architecture}}
          path: emulated-out/rpmbuild/RPMS/
          if-no-files-found: error
          retention-days: 1
          overwrite: true
