name: build-cross-gcc

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

jobs:
  build-srpm:
    runs-on: ubuntu-latest
    container: almalinux/8-base

    steps:
      - uses: actions/checkout@v5

      - name: Install rpm build tools
        run: dnf -y install rpm-build rpm-devel rpmdevtools git

      - name: Build rpm buildtree
        working-directory: /github/home
        run: rpmdev-setuptree

      - name: Copy spec and patch files
        run: |
          cp cross-gcc/rpm/*.spec /github/home/rpmbuild/SPECS
          cp cross-gcc/rpm/*.patch /github/home/rpmbuild/SOURCES

      - name: Download source
        run: bash cross-gcc/rpm/make_archive.sh /github/home/rpmbuild/SPECS/cross-gcc.spec

      - name: Move source
        run: mv gcc*.tar.xz /github/home/rpmbuild/SOURCES/

      - name: Build SRPM
        run: rpmbuild -bs /github/home/rpmbuild/SPECS/cross-gcc.spec

      - name: Upload SRPM
        uses: actions/upload-artifact@v4
        with:
          name: gcc-srpm
          path: /github/home/rpmbuild/SRPMS/cross-gcc*.src.rpm
          if-no-files-found: error
          retention-days: 1
          overwrite: true


  build-binary:
    runs-on: ubuntu-latest
    needs: [build-srpm]
    container: almalinux/8-base
    strategy:
      matrix:
        architecture: [ppc64le, s390x, i386]
        include:
          - architecture: ppc64le
            build_name: powerpc64le
          - architecutre: s390x
            build_name: s390x
          - architecutre: i386
            build_name: x86_64
    steps:
      - name: Install DNF plugins
        run: dnf -y install dnf-plugins-core
        
      - name: Enable powertools
        run: dnf config-manager --set-enabled powertools

      - name: Install EPEL
        run: dnf -y install epel-release
        
      - name: Install rpm build tools
        run: dnf -y install rpm-build rpm-devel rpmdevtools git 'dnf-command(builddep)'

      - name: Build rpm buildtree
        working-directory: /github/home
        run: rpmdev-setuptree

      - name: Download SRPM
        uses: actions/download-artifact@v5
        with:
          name: gcc-srpm
          path: /github/home/rpmbuild/SRPMS

      - name: Install build dependencies
        run: dnf -y builddep /github/home/rpmbuild/SRPMS/*.src.rpm

      - name: Build binary RPM
        run: rpmbuild --rebuild /github/home/rpmbuild/SRPMS/*.src.rpm --define "build_"${{matrix.build_name}}" 1"

      - name: Upload RPMs
        uses: actions/upload-artifact@v4
        with:
          name: gcc-${{matrix.architecture}}
          path: /github/home/rpmbuild/RPMS/
          if-no-files-found: error
          retention-days: 1
          overwrite: true

        
          
